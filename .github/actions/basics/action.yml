name: "Basic Checks"
description: "Installs dependencies and runs pre-commit hooks"

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4

    - uses: ./.github/actions/elapsed-time
      with:
        statement: "actions/checkout"

    # ===============================================

    - name: install Rust nightly
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ inputs.rust_nightly }}
        components: clippy, rustfmt

    - uses: ./.github/actions/elapsed-time
      with:
        statement: "rust-toolchain"

    # ===============================================

    - uses: cargo-bins/cargo-binstall@main

    # ===============================================

    - name: install lychee prefligit ripgrep taplo-cli
      shell: bash
      run: |
        cargo binstall --no-confirm lychee prefligit ripgrep
        cargo binstall --no-confirm --locked taplo-cli

    - uses: ./.github/actions/elapsed-time
      with:
        statement: "install lychee prefligit ripgrep taplo-cli"

    # ===============================================

    - name: install cargo-deny,cargo-spellcheck
      uses: taiki-e/install-action@v2
      with:
        tool: cargo-deny,cargo-spellcheck

    - uses: ./.github/actions/elapsed-time
      with:
        statement: "install cargo-deny,cargo-spellcheck"

    # ===============================================

    ### rust-cache ###
    # a)  save all contents even after its action location
    #
    # b)  doesn’t cache binaries, but the related metadata will,
    #     so caused issues like “cargo binstall” detect binaries
    #     are installed, but actually they don’t exist! These 
    #     binary installations should be put BEFORE this 
    #     rust-cache action
    #
    # c)  doesn’t remove user's bin files, the "Any files in
    #     ~/.cargo/bin that were present before the action 
    #     ran (for example rustc)." says the cache itself

    - uses: Swatinem/rust-cache@v2

    - uses: ./.github/actions/elapsed-time
      with:
        statement: "rust-cache"

    # ===============================================

    - name: restore lychee cache
      uses: actions/cache@v4
      with:
        path: .lycheecache
        key: cache-lychee-${{ github.sha }}
        restore-keys: cache-lychee-

    - uses: ./.github/actions/elapsed-time
      with:
        statement: "Restore lychee cache"

    # ===============================================

    - name: run prefligit
      env:
        GITHUB_BASE_SHA: ${{ github.event.pull_request.base.sha || '' }}
      shell: bash
      run: |
        prefligit -v run --all-files

    - uses: ./.github/actions/elapsed-time
      with:
        statement: "run prefligit"

    - name: run pre-commit
      env:
        GITHUB_BASE_SHA: ${{ github.event.pull_request.base.sha || '' }}
      shell: bash
      run: |
        time python3 -m venv venv
        time source venv/bin/activate
        time pip -q install pre-commit
        time pre-commit run --all-files

    - uses: ./.github/actions/elapsed-time
      with:
        statement: "run pre-commit"

    # ===============================================

    - uses: actions/setup-node@v4
      with:
        node-version: "latest"

    - uses: ./.github/actions/elapsed-time
      with:
        statement: "install Node.js"

    - name: install commitlint
      shell: bash
      run: |
        npm install @commitlint/{cli,config-conventional}

    - uses: ./.github/actions/elapsed-time
      with:
        statement: "install commitlint"

    - name: run commitlint
      shell: bash
      run: |
        npx commitlint --last --verbose

    - uses: ./.github/actions/elapsed-time
      with:
        statement: "run commitlint"

    # ===============================================

    - name: show All Elapsed Times
      if: always()
      shell: bash
      run: |
        echo "==== Elapsed Times in seconds ===="
        cat .elapsed_report || echo "(No report found)"

inputs:
  rust_nightly:
    description: "Rust nightly toolchain version"
    required: false
    default: "nightly"
