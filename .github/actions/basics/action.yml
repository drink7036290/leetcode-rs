name: "Basic Checks"

runs:
  using: "composite"
  steps:
    - name: Record start time
      run: echo "START=$(date +%s)" >> $GITHUB_ENV
      shell: bash

    # Check out repository
    - uses: actions/checkout@v4

    - name: Calculate elapsed after checkout
      run: |
        END=$(date +%s)
        echo "Checkout took: $((END - START)) seconds"
        echo "START=$END" >> $GITHUB_ENV
      shell: bash

    # Set up Rust nightly toolchain
    - name: Install Rust nightly
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ inputs.rust_nightly }}
        components: clippy, rustfmt

    - name: Calculate elapsed after Rust installation
      run: |
        END=$(date +%s)
        echo "Rust install took: $((END - START)) seconds"
        echo "START=$END" >> $GITHUB_ENV
      shell: bash

    # Install cargo-deny precompiled binary
    - name: Install cargo-deny precompiled binary
      run: |
        mkdir -p cargo-deny-dir
        curl -L https://github.com/EmbarkStudios/cargo-deny/releases/download/0.16.3/cargo-deny-0.16.3-x86_64-unknown-linux-musl.tar.gz | tar xz --strip-components=1 -C cargo-deny-dir
        chmod +x cargo-deny-dir/cargo-deny
        mv cargo-deny-dir/cargo-deny ~/.cargo/bin/
        rm -rf cargo-deny-dir
      shell: bash

    - name: Elapsed after cargo-deny install
      run: |
        END=$(date +%s)
        echo "Cargo-deny install took: $((END - START)) seconds"
        echo "START=$END" >> $GITHUB_ENV
      shell: bash

    # Install lychee
    - name: Install lychee
      run: |
        curl -L https://github.com/lycheeverse/lychee/releases/download/lychee-v0.18.0/lychee-x86_64-unknown-linux-musl.tar.gz | tar xz
        chmod +x lychee/lychee
        mv lychee/lychee ~/.cargo/bin/
      shell: bash

    - name: Elapsed after lychee install
      run: |
        END=$(date +%s)
        echo "lychee install took: $((END - START)) seconds"
        echo "START=$END" >> $GITHUB_ENV
      shell: bash

    # Swatinem/rust-cache
    - uses: Swatinem/rust-cache@v2

    - name: Elapsed after rust-cache
      run: |
        END=$(date +%s)
        echo "rust-cache step took: $((END - START)) seconds"
        echo "START=$END" >> $GITHUB_ENV
      shell: bash

    # Set up env for markdownlint
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "latest"

    - name: Elapsed after Node.js setup
      run: |
        END=$(date +%s)
        echo "Node.js setup took: $((END - START)) seconds"
        echo "START=$END" >> $GITHUB_ENV
      shell: bash

    - name: Install markdownlint-cli
      run: npm install -g markdownlint-cli
      shell: bash

    - name: Elapsed after markdownlint-cli install
      run: |
        END=$(date +%s)
        echo "markdownlint-cli install took: $((END - START)) seconds"
        echo "START=$END" >> $GITHUB_ENV
      shell: bash

    # Restore lychee cache
    - name: Restore lychee cache
      id: restore-cache
      uses: actions/cache/restore@v4
      with:
        path: .lycheecache
        key: cache-lychee-${{ github.sha }}
        restore-keys: cache-lychee-

    # Run pre-commit hooks on all files
    - name: Run pre-commit
      run: |
        python3 -m venv venv
        source venv/bin/activate
        pip install pre-commit
        pre-commit run --all-files
      shell: bash

    - name: Elapsed after pre-commit
      run: |
        END=$(date +%s)
        echo "pre-commit took: $((END - START)) seconds"
        echo "START=$END" >> $GITHUB_ENV
      shell: bash

    # Save lychee cache
    - name: Save lychee cache
      uses: actions/cache/save@v4
      if: always()
      with:
        path: .lycheecache
        key: ${{ steps.restore-cache.outputs.cache-primary-key }}

    - name: Elapsed after lychee save
      run: |
        END=$(date +%s)
        echo "lychee save took: $((END - START)) seconds"
        echo "START=$END" >> $GITHUB_ENV
      shell: bash

inputs:
  rust_nightly:
    description: "Rust nightly toolchain version"
    required: false
    default: "nightly"
