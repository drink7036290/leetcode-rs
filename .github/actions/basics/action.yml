name: "Basic Checks"

runs:
  using: "composite"
  steps:
    - run: start=$(date +%s)
      shell: bash

    # 1. Check out repository
    - uses: actions/checkout@v4

    - run: |
        end=$(date +%s)
        echo "Time taken: $((end-start)) seconds"
        start=$end
      shell: bash

    # 2. Set up Rust nightly toolchain
    - name: Install Rust nightly
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ inputs.rust_nightly }}
        components: clippy, rustfmt

    - run: |
        end=$(date +%s)
        echo "Time taken: $((end-start)) seconds"
        start=$end
      shell: bash

    - name:
        Install cargo-deny; No cargo deny init since deny.toml already exists
      run: |
        cargo install --locked cargo-deny
      shell: bash

    - run: |
        end=$(date +%s)
        echo "Time taken: $((end-start)) seconds"
        start=$end
      shell: bash

    - uses: Swatinem/rust-cache@v2

    - run: |
        end=$(date +%s)
        echo "Time taken: $((end-start)) seconds"
        start=$end
      shell: bash

    # 3. Set up env for markdownlint
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "latest"

    - run: |
        end=$(date +%s)
        echo "Time taken: $((end-start)) seconds"
        start=$end
      shell: bash

    - name: Install markdownlint-cli
      run: npm install -g markdownlint-cli
      shell: bash

    - run: |
        end=$(date +%s)
        echo "Time taken: $((end-start)) seconds"
        start=$end
      shell: bash

    # 4. Run pre-commit hooks on all files
    - name: Run pre-commit
      run: |
        time python3 -m venv venv
        time source venv/bin/activate
        time pip install pre-commit
        time pre-commit run --all-files
      shell: bash

    - run: |
        end=$(date +%s)
        echo "Time taken: $((end-start)) seconds"
        start=$end
      shell: bash

    # 5. Run linkspector
    - name: Run linkspector
      uses: umbrelladocs/action-linkspector@v1
      with:
        reporter: github-pr-review

    - run: |
        end=$(date +%s)
        echo "Time taken: $((end-start)) seconds"
        start=$end
      shell: bash

inputs:
  rust_nightly:
    description: "Rust nightly toolchain version"
    required: false
    default: "nightly"
