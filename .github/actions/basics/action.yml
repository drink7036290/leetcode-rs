name: "Basic Checks"
description: "Installs dependencies and runs pre-commit hooks"

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4

    - uses: ./.github/actions/elapsed-time
      with:
        statement: "actions/checkout"

    # ===============================================

    - name: install Rust nightly
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ inputs.rust_nightly }}
        components: clippy, rustfmt

    - uses: ./.github/actions/elapsed-time
      with:
        statement: "rust-toolchain"

    # ===============================================

    - uses: Swatinem/rust-cache@v2

    - uses: ./.github/actions/elapsed-time
      with:
        statement: "rust-cache"

    # ===============================================

    - uses: cargo-bins/cargo-binstall@main

    # ===============================================

    - name: install lychee prefligit ripgrep taplo-cli
      shell: bash
      run: |
        cargo binstall --no-confirm lychee prefligit ripgrep
        cargo binstall --no-confirm --locked taplo-cli

    - name: Debug installed binaries
      shell: bash
      run: |
        echo "PATH is: $PATH"
        echo "CARGO_HOME is: $CARGO_HOME"

        echo
        echo "==== Searching each PATH directory for 'prefligit' or 'rg' ===="
        IFS=':' read -ra PATH_ARRAY <<< "$PATH"
        for dir in "${PATH_ARRAY[@]}"; do
          echo "-> Checking $dir"
          # Only list if directory actually exists (some paths may not exist)
          if [ -d "$dir" ]; then
            ls -1 "$dir" | grep -E '^(prefligit|rg)$' || true
          else
            echo "   (Not a directory)"
          fi
        done

        echo
        echo "==== Checking 'which' output for 'prefligit' or 'rg' ===="
        which prefligit || echo "'prefligit' not found by 'which'"
        which rg || echo "'rg' not found by 'which'"

        echo
        echo "==== Brute-force searching /home/runner for 'prefligit' and 'rg' ===="
        # Use 'find' instead of 'rg', since 'rg' is missing
        echo "Searching for prefligit..."
        find /home/runner -name prefligit 2>/dev/null || echo "No prefligit found."

        echo
        echo "Searching for rg..."
        find /home/runner -name rg 2>/dev/null || echo "No rg found."

    - uses: ./.github/actions/elapsed-time
      with:
        statement: "install lychee prefligit ripgrep taplo-cli"

    # ===============================================

    - name: install cargo-deny,cargo-spellcheck
      uses: taiki-e/install-action@v2
      with:
        tool: cargo-deny,cargo-spellcheck

    - uses: ./.github/actions/elapsed-time
      with:
        statement: "install cargo-deny,cargo-spellcheck"

    # ===============================================

    - name: restore lychee cache
      uses: actions/cache@v4
      with:
        path: .lycheecache
        key: cache-lychee-${{ github.sha }}
        restore-keys: cache-lychee-

    - uses: ./.github/actions/elapsed-time
      with:
        statement: "Restore lychee cache"

    # ===============================================

    - name: run prefligit
      env:
        GITHUB_BASE_SHA: ${{ github.event.pull_request.base.sha || '' }}
      shell: bash
      run: |
        prefligit -v run --all-files

    - uses: ./.github/actions/elapsed-time
      with:
        statement: "run prefligit"

    - name: run pre-commit
      env:
        GITHUB_BASE_SHA: ${{ github.event.pull_request.base.sha || '' }}
      shell: bash
      run: |
        time python3 -m venv venv
        time source venv/bin/activate
        time pip -q install pre-commit
        time pre-commit run --all-files

    - uses: ./.github/actions/elapsed-time
      with:
        statement: "run pre-commit"

    # ===============================================

    - uses: actions/setup-node@v4
      with:
        node-version: "latest"

    - uses: ./.github/actions/elapsed-time
      with:
        statement: "install Node.js"

    - name: install commitlint
      shell: bash
      run: |
        npm install @commitlint/{cli,config-conventional}

    - uses: ./.github/actions/elapsed-time
      with:
        statement: "install commitlint"

    - name: run commitlint
      shell: bash
      run: |
        npx commitlint --last --verbose

    - uses: ./.github/actions/elapsed-time
      with:
        statement: "run commitlint"

    # ===============================================

    - name: show All Elapsed Times
      if: always()
      shell: bash
      run: |
        echo "==== Elapsed Times in seconds ===="
        cat .elapsed_report || echo "(No report found)"

inputs:
  rust_nightly:
    description: "Rust nightly toolchain version"
    required: false
    default: "nightly"
