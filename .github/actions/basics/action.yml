name: "Basic Checks"
description: "Installs dependencies and runs pre-commit hooks"

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4

    - uses: ./.github/actions/elapsed-time
      with:
        statement: "actions/checkout"

    # ===============================================

    - name: Install Rust nightly
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ inputs.rust_nightly }}
        components: clippy, rustfmt

    - uses: ./.github/actions/elapsed-time
      with:
        statement: "rust-toolchain"

    # ===============================================

    - name: dependencies for cargo-spellcheck
      shell: bash
      run: |
        sudo apt install -y clang libclang-dev llvm

    - name: Find and set LIBCLANG_PATH
      shell: bash
      run: |
        # Find the highest versioned LLVM directory (e.g., /usr/lib/llvm-14, /usr/lib/llvm-17, /usr/lib/llvm-18, etc.)
        clang_lib_dir=$(find /usr/lib/llvm-* -maxdepth 0 -type d 2>/dev/null | sort -V | tail -n 1)/lib
        
        echo "Detected clang_lib_dir: $clang_lib_dir"
        # Export it as an environment variable so subsequent steps can use it
        echo "LIBCLANG_PATH=$clang_lib_dir" >> $GITHUB_ENV

    - uses: cargo-bins/cargo-binstall@main
    - name: install cargo-deny lychee prefligit cargo-spellcheck
      shell: bash
      run: |
        cargo binstall --locked --no-confirm cargo-deny lychee prefligit cargo-spellcheck

    - uses: ./.github/actions/elapsed-time
      with:
        statement: "install cargo-deny lychee prefligit cargo-spellcheck"

    # ===============================================

    - uses: Swatinem/rust-cache@v2

    - uses: ./.github/actions/elapsed-time
      with:
        statement: "rust-cache"

    # ===============================================

    - name: Restore lychee cache
      uses: actions/cache@v4
      with:
        path: .lycheecache
        key: cache-lychee-${{ github.sha }}
        restore-keys: cache-lychee-

    - uses: ./.github/actions/elapsed-time
      with:
        statement: "Restore lychee cache"

    # ===============================================

    - name: Run pre-commit
      shell: bash
      run: |
        time python3 -m venv venv
        time source venv/bin/activate
        time pip -q install pre-commit
        time pre-commit run --all-files

    - uses: ./.github/actions/elapsed-time
      with:
        statement: "pre-commit"

    - name: Run prefligit
      shell: bash
      run: |
        prefligit run --all-files

    - uses: ./.github/actions/elapsed-time
      with:
        statement: "prefligit"

    # ===============================================

    - name: Show All Elapsed Times
      if: always()
      shell: bash
      run: |
        echo "==== Elapsed Times in seconds ===="
        cat .elapsed_report || echo "(No report found)"

inputs:
  rust_nightly:
    description: "Rust nightly toolchain version"
    required: false
    default: "nightly"
